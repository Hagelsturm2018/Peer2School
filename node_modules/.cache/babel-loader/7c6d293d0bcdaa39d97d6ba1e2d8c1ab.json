{"remainingRequest":"/Users/jannikschilling/Documents/Hagelsturm2018.github.io/peer2school-master/node_modules/babel-loader/lib/index.js!/Users/jannikschilling/Documents/Hagelsturm2018.github.io/peer2school-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/jannikschilling/Documents/Hagelsturm2018.github.io/peer2school-master/src/lib/webrtc.js","dependencies":[{"path":"/Users/jannikschilling/Documents/Hagelsturm2018.github.io/peer2school-master/src/lib/webrtc.js","mtime":1584780410000},{"path":"/Users/jannikschilling/Documents/Hagelsturm2018.github.io/peer2school-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jannikschilling/Documents/Hagelsturm2018.github.io/peer2school-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jannikschilling/Documents/Hagelsturm2018.github.io/peer2school-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnZhbHVlcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2phbm5pa3NjaGlsbGluZy9Eb2N1bWVudHMvSGFnZWxzdHVybTIwMTguZ2l0aHViLmlvL3BlZXIyc2Nob29sLW1hc3Rlci9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIi9Vc2Vycy9qYW5uaWtzY2hpbGxpbmcvRG9jdW1lbnRzL0hhZ2Vsc3R1cm0yMDE4LmdpdGh1Yi5pby9wZWVyMnNjaG9vbC1tYXN0ZXIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIGZyb20gIi9Vc2Vycy9qYW5uaWtzY2hpbGxpbmcvRG9jdW1lbnRzL0hhZ2Vsc3R1cm0yMDE4LmdpdGh1Yi5pby9wZWVyMnNjaG9vbC1tYXN0ZXIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIjsKaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvamFubmlrc2NoaWxsaW5nL0RvY3VtZW50cy9IYWdlbHN0dXJtMjAxOC5naXRodWIuaW8vcGVlcjJzY2hvb2wtbWFzdGVyL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL1VzZXJzL2phbm5pa3NjaGlsbGluZy9Eb2N1bWVudHMvSGFnZWxzdHVybTIwMTguZ2l0aHViLmlvL3BlZXIyc2Nob29sLW1hc3Rlci9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwppbXBvcnQgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4gZnJvbSAiL1VzZXJzL2phbm5pa3NjaGlsbGluZy9Eb2N1bWVudHMvSGFnZWxzdHVybTIwMTguZ2l0aHViLmlvL3BlZXIyc2Nob29sLW1hc3Rlci9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiI7CmltcG9ydCBfZ2V0UHJvdG90eXBlT2YgZnJvbSAiL1VzZXJzL2phbm5pa3NjaGlsbGluZy9Eb2N1bWVudHMvSGFnZWxzdHVybTIwMTguZ2l0aHViLmlvL3BlZXIyc2Nob29sLW1hc3Rlci9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZ2V0UHJvdG90eXBlT2YiOwppbXBvcnQgX2Fzc2VydFRoaXNJbml0aWFsaXplZCBmcm9tICIvVXNlcnMvamFubmlrc2NoaWxsaW5nL0RvY3VtZW50cy9IYWdlbHN0dXJtMjAxOC5naXRodWIuaW8vcGVlcjJzY2hvb2wtbWFzdGVyL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQiOwppbXBvcnQgX2luaGVyaXRzIGZyb20gIi9Vc2Vycy9qYW5uaWtzY2hpbGxpbmcvRG9jdW1lbnRzL0hhZ2Vsc3R1cm0yMDE4LmdpdGh1Yi5pby9wZWVyMnNjaG9vbC1tYXN0ZXIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMvamFubmlrc2NoaWxsaW5nL0RvY3VtZW50cy9IYWdlbHN0dXJtMjAxOC5naXRodWIuaW8vcGVlcjJzY2hvb2wtbWFzdGVyL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7Ci8vIENvcHlyaWdodCAoYykgMjAyMCBEaXJrIEhvbHR3aWNrLiBBbGwgcmlnaHRzIHJlc2VydmVkLiBodHRwczovL2hvbHR3aWNrLmRlL2NvcHlyaWdodAppbXBvcnQgaW8gZnJvbSAnc29ja2V0LmlvLWNsaWVudCc7CmltcG9ydCB7IGFzc2VydCB9IGZyb20gJy4vYXNzZXJ0JzsKaW1wb3J0IHsgRW1pdHRlciB9IGZyb20gJy4vZW1pdHRlcic7CmltcG9ydCB7IFdlYlJUQ1BlZXIgfSBmcm9tICcuL3dlYnJ0Yy1wZWVyJzsKCnZhciBsb2cgPSByZXF1aXJlKCdkZWJ1ZycpKCdhcHA6d2VicnRjJyk7IC8vIGNvbnN0IHNpZ25hbFNlcnZlclVSTCA9ICd3czovL2xvY2FsaG9zdDo0NDQ1JwoKCnZhciBzaWduYWxTZXJ2ZXJVUkwgPSAnd3NzOi8vc2lnbmFsLnBlZXIuc2Nob29sJzsgLy8gY29uc3Qgc2lnbmFsU2VydmVyVVJMID0gYHdzOi8vMTkyLjE2OC4wLjExMTo0NDQ1YAovLyBIYW5kbGVzIG11bHRpcGxlIGNvbm5lY3Rpb25zLCBvbmUgdG8gZWFjaCBwZWVyCgpleHBvcnQgdmFyIFdlYlJUQyA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX0VtaXR0ZXIpIHsKICBfaW5oZXJpdHMoV2ViUlRDLCBfRW1pdHRlcik7CgogIGZ1bmN0aW9uIFdlYlJUQygpIHsKICAgIHZhciBfdGhpczsKCiAgICB2YXIgX3JlZiA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge30sCiAgICAgICAgd3J0YyA9IF9yZWYud3J0YywKICAgICAgICBfcmVmJHJvb20gPSBfcmVmLnJvb20sCiAgICAgICAgcm9vbSA9IF9yZWYkcm9vbSA9PT0gdm9pZCAwID8gbnVsbCA6IF9yZWYkcm9vbTsKCiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgV2ViUlRDKTsKCiAgICBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9nZXRQcm90b3R5cGVPZihXZWJSVEMpLmNhbGwodGhpcykpOwoKICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgInBlZXJDb25uZWN0aW9ucyIsIHt9KTsKCiAgICBhc3NlcnQocm9vbSwgJ3Jvb20gY2Fubm90IGJlIGVtcHR5Jyk7CiAgICBsb2coJ3dlYnJ0YyByZWFjaGVzIG91dCB0bycsIHNpZ25hbFNlcnZlclVSTCk7IC8vIGh0dHBzOi8vc29ja2V0LmlvL2RvY3MvY2xpZW50LWFwaS8KCiAgICBfdGhpcy5pbyA9IGlvKHNpZ25hbFNlcnZlclVSTCwgey8vIHRyYW5zcG9ydHM6IFsnd2Vic29ja2V0J10sCiAgICB9KTsKICAgIGFzc2VydChfdGhpcy5pbywgInNob3VsZCBub3QgZmFpbCB0byByZWFjaCBvdXQgdG8gIi5jb25jYXQoc2lnbmFsU2VydmVyVVJMKSk7CgogICAgX3RoaXMuaW8ub24oJ2Nvbm5lY3QnLCBmdW5jdGlvbiAoKSB7CiAgICAgIGxvZygnY29ubmVjdCcsIF90aGlzLmlvLmlkKTsKCiAgICAgIF90aGlzLmVtaXQoJ2lvJywgewogICAgICAgIG9ubGluZTogdHJ1ZQogICAgICB9KTsKCiAgICAgIF90aGlzLmVtaXQoJ2Nvbm5lY3QnKTsKCiAgICAgIF90aGlzLmlvLmVtaXQoJ2pvaW4nLCB7CiAgICAgICAgcm9vbTogcm9vbQogICAgICB9KTsKICAgIH0pOwoKICAgIF90aGlzLmlvLm9uKCdkaXNjb25uZWN0JywgZnVuY3Rpb24gKCkgewogICAgICBsb2coJ2Rpc2Nvbm5lY3QnKTsKCiAgICAgIF90aGlzLmVtaXQoJ2lvJywgewogICAgICAgIG9ubGluZTogZmFsc2UKICAgICAgfSk7CgogICAgICBfdGhpcy5lbWl0KCdkaXNjb25uZWN0Jyk7CiAgICB9KTsKCiAgICBfdGhpcy5pby5vbigncmVtb3ZlJywgZnVuY3Rpb24gKF9yZWYyKSB7CiAgICAgIHZhciBpZCA9IF9yZWYyLmlkOwogICAgICB2YXIgcGVlciA9IF90aGlzLnBlZXJDb25uZWN0aW9uc1tpZF07CgogICAgICBpZiAocGVlcikgewogICAgICAgIHBlZXIuY2xvc2UoKTsKICAgICAgICBkZWxldGUgX3RoaXMucGVlckNvbm5lY3Rpb25zW2lkXTsKCiAgICAgICAgX3RoaXMudXBkYXRlU3RhdHVzKCk7CgogICAgICAgIF90aGlzLmVtaXQoJ2Rpc2Nvbm5lY3RlZCcsIHsKICAgICAgICAgIHBlZXI6IHBlZXIKICAgICAgICB9KTsKICAgICAgfQogICAgfSk7IC8vIFJlY2VpdmUgYWxsIG90aGVyIGN1cnJlbnRseSBhdmFpbGFibGUgcGVlcnMKCgogICAgX3RoaXMuaW8ub24oJ2pvaW5lZCcsIGZ1bmN0aW9uIChfcmVmMykgewogICAgICB2YXIgcm9vbSA9IF9yZWYzLnJvb20sCiAgICAgICAgICBwZWVycyA9IF9yZWYzLnBlZXJzOwogICAgICB2YXIgbG9jYWwgPSBfdGhpcy5pby5pZDsKICAgICAgbG9nKCdtZScsIGxvY2FsLCByb29tLCAncGVlcnMnLCBwZWVycyk7IC8vIFdlIHdpbGwgdHJ5IHRvIGVzdGFibGlzaCBhIHNlcGFyYXRlIGNvbm5lY3Rpb24gdG8gYWxsIG9mIHRoZW0KICAgICAgLy8gSWYgdGhlIG5ldyBwYXJ0aWNpcGFudCAodXMpIGluaXRpYXRlcyB0aGUgY29ubmVjdGlvbnMsIHRoZSBvdGhlcnMgZG8KICAgICAgLy8gbm90IG5lZWQgdG8gZ2V0IHVwZGF0ZXMgYWJvdXQgbmV3IHBlZXJzCgogICAgICBfdGhpcy5pby5vbignc2lnbmFsJywgZnVuY3Rpb24gKF9yZWY0KSB7CiAgICAgICAgdmFyIGZyb20gPSBfcmVmNC5mcm9tLAogICAgICAgICAgICB0byA9IF9yZWY0LnRvLAogICAgICAgICAgICBzaWduYWwgPSBfcmVmNC5zaWduYWwsCiAgICAgICAgICAgIGluaXRpYXRvciA9IF9yZWY0LmluaXRpYXRvcjsKICAgICAgICBsb2coJ3JlY2VpdmVkIHNpZ25hbCcsIGZyb20sIHRvID09PSBsb2NhbCwgaW5pdGlhdG9yKTsgLy8gSWYgd2UgYXJlIG5vdCBhbHJlYWR5IGNvbm5lY3RlZCwgZG8gaXQgbm93CgogICAgICAgIHZhciBwZWVyID0gX3RoaXMucGVlckNvbm5lY3Rpb25zW2Zyb21dOwoKICAgICAgICBpZiAoIXBlZXIpIHsKICAgICAgICAgIHBlZXIgPSBfdGhpcy5oYW5kbGVQZWVyKHsKICAgICAgICAgICAgcmVtb3RlOiBmcm9tLAogICAgICAgICAgICBsb2NhbDogbG9jYWwsCiAgICAgICAgICAgIGluaXRpYXRvcjogZmFsc2UsCiAgICAgICAgICAgIHdydGM6IHdydGMKICAgICAgICAgIH0pOwogICAgICAgIH0KCiAgICAgICAgcGVlci5zaWduYWwoc2lnbmFsKTsKCiAgICAgICAgX3RoaXMudXBkYXRlU3RhdHVzKCk7CiAgICAgIH0pOwoKICAgICAgdmFyIF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gPSB0cnVlOwogICAgICB2YXIgX2RpZEl0ZXJhdG9yRXJyb3IgPSBmYWxzZTsKICAgICAgdmFyIF9pdGVyYXRvckVycm9yID0gdW5kZWZpbmVkOwoKICAgICAgdHJ5IHsKICAgICAgICBmb3IgKHZhciBfaXRlcmF0b3IgPSBwZWVyc1tTeW1ib2wuaXRlcmF0b3JdKCksIF9zdGVwOyAhKF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gPSAoX3N0ZXAgPSBfaXRlcmF0b3IubmV4dCgpKS5kb25lKTsgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IHRydWUpIHsKICAgICAgICAgIHZhciByZW1vdGUgPSBfc3RlcC52YWx1ZTsKCiAgICAgICAgICBfdGhpcy5oYW5kbGVQZWVyKHsKICAgICAgICAgICAgcmVtb3RlOiByZW1vdGUsCiAgICAgICAgICAgIGxvY2FsOiBsb2NhbCwKICAgICAgICAgICAgaW5pdGlhdG9yOiB0cnVlLAogICAgICAgICAgICB3cnRjOiB3cnRjCiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIF9kaWRJdGVyYXRvckVycm9yID0gdHJ1ZTsKICAgICAgICBfaXRlcmF0b3JFcnJvciA9IGVycjsKICAgICAgfSBmaW5hbGx5IHsKICAgICAgICB0cnkgewogICAgICAgICAgaWYgKCFfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uICYmIF9pdGVyYXRvclsicmV0dXJuIl0gIT0gbnVsbCkgewogICAgICAgICAgICBfaXRlcmF0b3JbInJldHVybiJdKCk7CiAgICAgICAgICB9CiAgICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAgIGlmIChfZGlkSXRlcmF0b3JFcnJvcikgewogICAgICAgICAgICB0aHJvdyBfaXRlcmF0b3JFcnJvcjsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KCiAgICAgIF90aGlzLnVwZGF0ZVN0YXR1cygpOwogICAgfSk7CgogICAgcmV0dXJuIF90aGlzOwogIH0KCiAgX2NyZWF0ZUNsYXNzKFdlYlJUQywgW3sKICAgIGtleTogInVwZGF0ZVN0YXR1cyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlU3RhdHVzKCkgewogICAgICB2YXIgc3RhdHVzID0gT2JqZWN0LnZhbHVlcyh0aGlzLnBlZXJDb25uZWN0aW9ucykubWFwKGZ1bmN0aW9uIChwZWVyKSB7CiAgICAgICAgdmFyIGFjdGl2ZSA9IHBlZXIuYWN0aXZlLAogICAgICAgICAgICBpbml0aWF0b3IgPSBwZWVyLmluaXRpYXRvciwKICAgICAgICAgICAgbG9jYWwgPSBwZWVyLmxvY2FsLAogICAgICAgICAgICByZW1vdGUgPSBwZWVyLnJlbW90ZTsKICAgICAgICByZXR1cm4gewogICAgICAgICAgYWN0aXZlOiBhY3RpdmUsCiAgICAgICAgICBpbml0aWF0b3I6IGluaXRpYXRvciwKICAgICAgICAgIGxvY2FsOiBsb2NhbCwKICAgICAgICAgIHJlbW90ZTogcmVtb3RlLAogICAgICAgICAgcGVlcjogcGVlcgogICAgICAgIH07CiAgICAgIH0pOwogICAgICB0aGlzLmVtaXQoJ3N0YXR1cycsIHsKICAgICAgICBzdGF0dXM6IHN0YXR1cwogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJnZXRQZWVyIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRQZWVyKGlkKSB7CiAgICAgIHJldHVybiB0aGlzLnBlZXJDb25uZWN0aW9uc1tpZF0gfHwgbnVsbDsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJoYW5kbGVQZWVyIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBoYW5kbGVQZWVyKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHZhciBfcmVmNSA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge30sCiAgICAgICAgICByZW1vdGUgPSBfcmVmNS5yZW1vdGUsCiAgICAgICAgICB3cnRjID0gX3JlZjUud3J0YywKICAgICAgICAgIGxvY2FsID0gX3JlZjUubG9jYWwsCiAgICAgICAgICBfcmVmNSRpbml0aWF0b3IgPSBfcmVmNS5pbml0aWF0b3IsCiAgICAgICAgICBpbml0aWF0b3IgPSBfcmVmNSRpbml0aWF0b3IgPT09IHZvaWQgMCA/IGZhbHNlIDogX3JlZjUkaW5pdGlhdG9yOwoKICAgICAgdmFyIHBlZXIgPSBuZXcgV2ViUlRDUGVlcih7CiAgICAgICAgbG9jYWw6IGxvY2FsLAogICAgICAgIHJlbW90ZTogcmVtb3RlLAogICAgICAgIGluaXRpYXRvcjogaW5pdGlhdG9yLAogICAgICAgIHRyaWNrbGU6IGZhbHNlLAogICAgICAgIHdydGM6IHdydGMKICAgICAgfSk7CiAgICAgIHRoaXMucGVlckNvbm5lY3Rpb25zW3JlbW90ZV0gPSBwZWVyOyAvLyBXZSByZWNlaXZlZCB0aGUgbG9jYWwgc2lnbmFsIChpLmUuIG5ldHdvcmsgbG9jYXRpb24gZGVzY3JpcHRpb24pIHRoYXQKICAgICAgLy8gd2Ugd2lsbCBub3cgc2VuZCB2aWEgd2ViIHNvY2tldCBzaWduYWxpbmcgc2VydmVyIHRvIHRoZSByZW1vdGUgcGVlcgoKICAgICAgcGVlci5vbignc2lnbmFsJywgZnVuY3Rpb24gKHNpZ25hbCkgewogICAgICAgIGxvZygncmVjZWl2ZWQgcGVlciBzaWduYWwnLCByZW1vdGUpOwoKICAgICAgICBfdGhpczIuaW8uZW1pdCgnc2lnbmFsJywgewogICAgICAgICAgZnJvbTogbG9jYWwsCiAgICAgICAgICB0bzogcmVtb3RlLAogICAgICAgICAgc2lnbmFsOiBzaWduYWwsCiAgICAgICAgICBpbml0aWF0b3I6IGluaXRpYXRvcgogICAgICAgIH0pOwogICAgICB9KTsgLy8gVGhlIGZ1bGwgY29ubmVjdGlvbiBpcyBlc3RhYmxpc2hlZCwgZnJvbSBub3cgb24gd2UgY2FuIGV4Y2hhbmdlIGRhdGEKCiAgICAgIHBlZXIub24oJ2Nvbm5lY3QnLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXMyLmVtaXQoJ2Nvbm5lY3RlZCcsIHsKICAgICAgICAgIHBlZXI6IHBlZXIKICAgICAgICB9KTsKCiAgICAgICAgX3RoaXMyLnVwZGF0ZVN0YXR1cygpOwogICAgICB9KTsgLy8gQSBtZXNzYWdlIGZyb20gdGhlIHJlbW90ZSBwZWVyCgogICAgICBwZWVyLm9uKCdkYXRhJywgZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICAvLyBkZXByCiAgICAgICAgdmFyIF9KU09OJHBhcnNlID0gSlNPTi5wYXJzZShkYXRhKSwKICAgICAgICAgICAgdHlwZSA9IF9KU09OJHBhcnNlLnR5cGUsCiAgICAgICAgICAgIG1zZyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfSlNPTiRwYXJzZSwgWyJ0eXBlIl0pOwoKICAgICAgICBfdGhpczIuZW1pdCh0eXBlLCBtc2cpOwogICAgICB9KTsKICAgICAgcGVlci5vbignbWVzc2FnZScsIGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgX3RoaXMyLmVtaXQoJ21lc3NhZ2UnLCBkYXRhKTsgLy8gQ2hhbm5lbCBjb21wYXQKCiAgICAgIH0pOwogICAgICBwZWVyLm9uKCdzdHJlYW0nLCBmdW5jdGlvbiAoc3RyZWFtKSB7fSk7CiAgICAgIHJldHVybiBwZWVyOwogICAgfQogIH0sIHsKICAgIGtleTogInBvc3RNZXNzYWdlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBwb3N0TWVzc2FnZShkYXRhKSB7CiAgICAgIC8vIENoYW5uZWwgY29tcGF0CiAgICAgIE9iamVjdC52YWx1ZXModGhpcy5wZWVyQ29ubmVjdGlvbnMpLmZvckVhY2goZnVuY3Rpb24gKHBlZXIpIHsKICAgICAgICBwZWVyLnBvc3RNZXNzYWdlKGRhdGEpOwogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJzZW5kIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBzZW5kKHR5cGUpIHsKICAgICAgdmFyIG1zZyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307CiAgICAgIC8vIGRlcHIKICAgICAgdGhpcy5wb3N0TWVzc2FnZShKU09OLnN0cmluZ2lmeShfb2JqZWN0U3ByZWFkKHt9LCBtc2csIHsKICAgICAgICB0eXBlOiB0eXBlCiAgICAgIH0pKSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiY2xvc2UiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNsb3NlKCkgewogICAgICBPYmplY3QudmFsdWVzKHRoaXMucGVlckNvbm5lY3Rpb25zKS5mb3JFYWNoKGZ1bmN0aW9uIChwZWVyKSB7CiAgICAgICAgcmV0dXJuIHBlZXIuY2xvc2UoKTsKICAgICAgfSk7CiAgICAgIHRoaXMucGVlckNvbm5lY3Rpb25zID0ge307CiAgICAgIHRoaXMuaW8uY2xvc2UoKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJjbGVhbnVwIiwKICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfY2xlYW51cCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAvLyBhd2FpdCBzdXBlci5jbGVhbnVwKCkKICAgICAgICAgICAgICAgIHRoaXMuY2xvc2UoKTsKCiAgICAgICAgICAgICAgY2FzZSAxOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgdGhpcyk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGNsZWFudXAoKSB7CiAgICAgICAgcmV0dXJuIF9jbGVhbnVwLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBjbGVhbnVwOwogICAgfSgpCiAgfV0pOwoKICByZXR1cm4gV2ViUlRDOwp9KEVtaXR0ZXIpOw=="},{"version":3,"sources":["/Users/jannikschilling/Documents/Hagelsturm2018.github.io/peer2school-master/src/lib/webrtc.js"],"names":["io","assert","Emitter","WebRTCPeer","log","require","signalServerURL","WebRTC","wrtc","room","on","id","emit","online","peer","peerConnections","close","updateStatus","peers","local","from","to","signal","initiator","handlePeer","remote","status","Object","values","map","active","trickle","data","JSON","parse","type","msg","stream","forEach","postMessage","stringify"],"mappings":"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","sourcesContent":["// Copyright (c) 2020 Dirk Holtwick. All rights reserved. https://holtwick.de/copyright\n\nimport io from 'socket.io-client'\nimport { assert } from './assert'\nimport { Emitter } from './emitter'\nimport { WebRTCPeer } from './webrtc-peer'\n\nconst log = require('debug')('app:webrtc')\n\n// const signalServerURL = 'ws://localhost:4445'\nconst signalServerURL = 'wss://signal.peer.school'\n// const signalServerURL = `ws://192.168.0.111:4445`\n\n// Handles multiple connections, one to each peer\nexport class WebRTC extends Emitter {\n\n  peerConnections = {}\n\n  constructor({\n                wrtc, // wrtc is used for unit testing via node.js\n                room = null,\n              } = {}) {\n    super()\n    assert(room, 'room cannot be empty')\n\n    log('webrtc reaches out to', signalServerURL)\n\n    // https://socket.io/docs/client-api/\n    this.io = io(signalServerURL, {\n      // transports: ['websocket'],\n    })\n    assert(this.io, `should not fail to reach out to ${signalServerURL}`)\n\n    this.io.on('connect', () => {\n      log('connect', this.io.id)\n      this.emit('io', {\n        online: true,\n      })\n      this.emit('connect')\n      this.io.emit('join', { room })\n    })\n\n    this.io.on('disconnect', () => {\n      log('disconnect')\n      this.emit('io', {\n        online: false,\n      })\n      this.emit('disconnect')\n    })\n\n    this.io.on('remove', ({ id }) => {\n      let peer = this.peerConnections[id]\n      if (peer) {\n        peer.close()\n        delete this.peerConnections[id]\n        this.updateStatus()\n        this.emit('disconnected', { peer })\n      }\n    })\n\n    // Receive all other currently available peers\n    this.io.on('joined', ({ room, peers }) => {\n      const local = this.io.id\n      log('me', local, room, 'peers', peers)\n\n      // We will try to establish a separate connection to all of them\n      // If the new participant (us) initiates the connections, the others do\n      // not need to get updates about new peers\n      this.io.on('signal', ({ from, to, signal, initiator }) => {\n        log('received signal', from, to === local, initiator)\n\n        // If we are not already connected, do it now\n        let peer = this.peerConnections[from]\n        if (!peer) {\n          peer = this.handlePeer({\n            remote: from,\n            local,\n            initiator: false,\n            wrtc,\n          })\n        }\n        peer.signal(signal)\n        this.updateStatus()\n      })\n\n      for (let remote of peers) {\n        this.handlePeer({\n          remote,\n          local,\n          initiator: true,\n          wrtc,\n        })\n      }\n\n      this.updateStatus()\n    })\n  }\n\n  updateStatus() {\n    let status = Object.values(this.peerConnections).map(peer => {\n      let { active, initiator, local, remote } = peer\n      return {\n        active, initiator, local, remote, peer,\n      }\n    })\n    this.emit('status', { status })\n  }\n\n  getPeer(id) {\n    return this.peerConnections[id] || null\n  }\n\n  handlePeer({ remote, wrtc, local, initiator = false } = {}) {\n    let peer = new WebRTCPeer({\n      local,\n      remote,\n      initiator,\n      trickle: false,\n      wrtc,\n    })\n\n    this.peerConnections[remote] = peer\n\n    // We received the local signal (i.e. network location description) that\n    // we will now send via web socket signaling server to the remote peer\n    peer.on('signal', signal => {\n      log('received peer signal', remote)\n      this.io.emit('signal', {\n        from: local,\n        to: remote,\n        signal,\n        initiator,\n      })\n    })\n\n    // The full connection is established, from now on we can exchange data\n    peer.on('connect', () => {\n      this.emit('connected', { peer })\n      this.updateStatus()\n    })\n\n    // A message from the remote peer\n    peer.on('data', data => { // depr\n      let { type, ...msg } = JSON.parse(data)\n      this.emit(type, msg)\n    })\n\n    peer.on('message', data => {\n      this.emit('message', data)  // Channel compat\n    })\n\n    peer.on('stream', stream => {\n\n    })\n\n    return peer\n  }\n\n  postMessage(data) {  // Channel compat\n    Object.values(this.peerConnections).forEach(peer => {\n      peer.postMessage(data)\n    })\n  }\n\n  send(type, msg = {}) {  // depr\n    this.postMessage(JSON.stringify({ ...msg, type }))\n  }\n\n  close() {\n    Object.values(this.peerConnections).forEach(peer => peer.close())\n    this.peerConnections = {}\n    this.io.close()\n  }\n\n  async cleanup() {\n    // await super.cleanup()\n    this.close()\n  }\n\n}\n"]}]}