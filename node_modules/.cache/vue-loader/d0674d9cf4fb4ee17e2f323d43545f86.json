{"remainingRequest":"/Users/jannikschilling/Documents/Hagelsturm2018.github.io/peer2school-master/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jannikschilling/Documents/Hagelsturm2018.github.io/peer2school-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jannikschilling/Documents/Hagelsturm2018.github.io/peer2school-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jannikschilling/Documents/Hagelsturm2018.github.io/peer2school-master/src/components/panel/MainPanel.vue?vue&type=template&id=0c546900&","dependencies":[{"path":"/Users/jannikschilling/Documents/Hagelsturm2018.github.io/peer2school-master/src/components/panel/MainPanel.vue","mtime":1558236212000},{"path":"/Users/jannikschilling/Documents/Hagelsturm2018.github.io/peer2school-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jannikschilling/Documents/Hagelsturm2018.github.io/peer2school-master/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/jannikschilling/Documents/Hagelsturm2018.github.io/peer2school-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jannikschilling/Documents/Hagelsturm2018.github.io/peer2school-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}